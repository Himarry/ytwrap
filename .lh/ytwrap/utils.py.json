{
    "sourceFile": "ytwrap/utils.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1749737992256,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1749738010400,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,65 +2,65 @@\n import pytz\r\n \r\n class YTUtilsClient:\r\n \r\n+    # 日本時間（JST）に変換\r\n     @staticmethod\r\n-    def _to_jst_datetime(iso_timestamp):\r\n+    def to_jst(iso_timestamp, fmt=\"%Y-%m-%d %H:%M:%S\"):\r\n         \"\"\"\r\n-        ISO形式のタイムスタンプをJSTのdatetimeオブジェクトに変換\r\n-        :param iso_timestamp: ISO形式のタイムスタンプ\r\n-        :return: JSTのdatetimeオブジェクト\r\n+        ISO形式のタイムスタンプをJSTに変換し、指定フォーマットで返す\r\n+        :param iso_timestamp: 例 '2025-06-12T10:00:00Z'\r\n+        :param fmt: 例 \"%Y-%m-%d %H:%M:%S\", \"%Y/%m/%d %H:%M\", \"%m月%d日 %H:%M\" など\r\n+        :return: フォーマット済みJST文字列\r\n         \"\"\"\r\n         dt = datetime.fromisoformat(iso_timestamp.replace('Z', '+00:00'))\r\n         jst = pytz.timezone('Asia/Tokyo')\r\n-        return dt.astimezone(jst)\r\n+        return dt.astimezone(jst).strftime(fmt)\r\n \r\n-    # 日本時間（JST）に変換\r\n     @staticmethod\r\n-    @staticmethod\r\n     def to_jst_iso(iso_timestamp):\r\n         \"\"\"\r\n         JSTのISO 8601形式（例: 2025-06-12T19:00:00+09:00）で返す\r\n         \"\"\"\r\n-        return YTUtilsClient._to_jst_datetime(iso_timestamp).isoformat()\r\n+        dt = datetime.fromisoformat(iso_timestamp.replace('Z', '+00:00'))\r\n+        jst = pytz.timezone('Asia/Tokyo')\r\n+        return dt.astimezone(jst).isoformat()\r\n \r\n     @staticmethod\r\n-    def to_jst_iso(iso_timestamp):\r\n-    @staticmethod\r\n     def to_jst_short(iso_timestamp):\r\n         \"\"\"\r\n         JSTの短い形式（例: 06/12 19:00）で返す\r\n         \"\"\"\r\n-        return YTUtilsClient._to_jst_datetime(iso_timestamp).strftime(\"%m/%d %H:%M\")\r\n-    def to_jst_short(iso_timestamp):\r\n-        \"\"\"\r\n-        JSTの短い形式（例: 06/12 19:00）で返す\r\n+        dt = datetime.fromisoformat(iso_timestamp.replace('Z', '+00:00'))\r\n+        jst = pytz.timezone('Asia/Tokyo')\r\n+        return dt.astimezone(jst).strftime(\"%m/%d %H:%M\")\r\n+\r\n     @staticmethod\r\n     def to_jst_ja(iso_timestamp):\r\n         \"\"\"\r\n         日本語表記（例: 2025年06月12日 19時00分）で返す\r\n         \"\"\"\r\n-        return YTUtilsClient._to_jst_datetime(iso_timestamp).strftime(\"%Y年%m月%d日 %H時%M分\")\r\n-        日本語表記（例: 2025年06月12日 19時00分）で返す\r\n-        \"\"\"\r\n         dt = datetime.fromisoformat(iso_timestamp.replace('Z', '+00:00'))\r\n+        jst = pytz.timezone('Asia/Tokyo')\r\n+        return dt.astimezone(jst).strftime(\"%Y年%m月%d日 %H時%M分\")\r\n+\r\n     @staticmethod\r\n     def to_jst_weekday(iso_timestamp):\r\n         \"\"\"\r\n         曜日付き（例: 2025-06-12(木) 19:00）で返す\r\n         \"\"\"\r\n-        jst_dt = YTUtilsClient._to_jst_datetime(iso_timestamp)\r\n+        dt = datetime.fromisoformat(iso_timestamp.replace('Z', '+00:00'))\r\n+        jst = pytz.timezone('Asia/Tokyo')\r\n         w = [\"月\", \"火\", \"水\", \"木\", \"金\", \"土\", \"日\"]\r\n-        wd = w[jst_dt.weekday()]\r\n-        return jst_dt.strftime(f\"%Y-%m-%d({wd}) %H:%M\")\r\n-        w = [\"月\", \"火\", \"水\", \"木\", \"金\", \"土\", \"日\"]\r\n         wd = w[dt.astimezone(jst).weekday()]\r\n+        return dt.astimezone(jst).strftime(f\"%Y-%m-%d({wd}) %H:%M\")\r\n+\r\n     @staticmethod\r\n     def to_jst_timeonly(iso_timestamp):\r\n         \"\"\"\r\n         時刻のみ（例: 19:00）で返す\r\n         \"\"\"\r\n-        return YTUtilsClient._to_jst_datetime(iso_timestamp).strftime(\"%H:%M\")\r\n+        dt = datetime.fromisoformat(iso_timestamp.replace('Z', '+00:00'))\r\n         jst = pytz.timezone('Asia/Tokyo')\r\n         return dt.astimezone(jst).strftime(\"%H:%M\")\r\n \r\n     @staticmethod\r\n@@ -70,5 +70,7 @@\n         :param iso_timestamp: ISO形式のタイムスタンプ\r\n         :param formatter: JSTのdatetimeを受け取り任意の文字列を返す関数\r\n         :return: ユーザー定義のフォーマット文字列\r\n         \"\"\"\r\n-        return formatter(YTUtilsClient._to_jst_datetime(iso_timestamp))\n\\ No newline at end of file\n+        dt = datetime.fromisoformat(iso_timestamp.replace('Z', '+00:00'))\r\n+        jst = pytz.timezone('Asia/Tokyo')\r\n+        return formatter(dt.astimezone(jst))\n\\ No newline at end of file\n"
                }
            ],
            "date": 1749737992256,
            "name": "Commit-0",
            "content": "from datetime import datetime\r\nimport pytz\r\n\r\nclass YTUtilsClient:\r\n\r\n    @staticmethod\r\n    def _to_jst_datetime(iso_timestamp):\r\n        \"\"\"\r\n        ISO形式のタイムスタンプをJSTのdatetimeオブジェクトに変換\r\n        :param iso_timestamp: ISO形式のタイムスタンプ\r\n        :return: JSTのdatetimeオブジェクト\r\n        \"\"\"\r\n        dt = datetime.fromisoformat(iso_timestamp.replace('Z', '+00:00'))\r\n        jst = pytz.timezone('Asia/Tokyo')\r\n        return dt.astimezone(jst)\r\n\r\n    # 日本時間（JST）に変換\r\n    @staticmethod\r\n    @staticmethod\r\n    def to_jst_iso(iso_timestamp):\r\n        \"\"\"\r\n        JSTのISO 8601形式（例: 2025-06-12T19:00:00+09:00）で返す\r\n        \"\"\"\r\n        return YTUtilsClient._to_jst_datetime(iso_timestamp).isoformat()\r\n\r\n    @staticmethod\r\n    def to_jst_iso(iso_timestamp):\r\n    @staticmethod\r\n    def to_jst_short(iso_timestamp):\r\n        \"\"\"\r\n        JSTの短い形式（例: 06/12 19:00）で返す\r\n        \"\"\"\r\n        return YTUtilsClient._to_jst_datetime(iso_timestamp).strftime(\"%m/%d %H:%M\")\r\n    def to_jst_short(iso_timestamp):\r\n        \"\"\"\r\n        JSTの短い形式（例: 06/12 19:00）で返す\r\n    @staticmethod\r\n    def to_jst_ja(iso_timestamp):\r\n        \"\"\"\r\n        日本語表記（例: 2025年06月12日 19時00分）で返す\r\n        \"\"\"\r\n        return YTUtilsClient._to_jst_datetime(iso_timestamp).strftime(\"%Y年%m月%d日 %H時%M分\")\r\n        日本語表記（例: 2025年06月12日 19時00分）で返す\r\n        \"\"\"\r\n        dt = datetime.fromisoformat(iso_timestamp.replace('Z', '+00:00'))\r\n    @staticmethod\r\n    def to_jst_weekday(iso_timestamp):\r\n        \"\"\"\r\n        曜日付き（例: 2025-06-12(木) 19:00）で返す\r\n        \"\"\"\r\n        jst_dt = YTUtilsClient._to_jst_datetime(iso_timestamp)\r\n        w = [\"月\", \"火\", \"水\", \"木\", \"金\", \"土\", \"日\"]\r\n        wd = w[jst_dt.weekday()]\r\n        return jst_dt.strftime(f\"%Y-%m-%d({wd}) %H:%M\")\r\n        w = [\"月\", \"火\", \"水\", \"木\", \"金\", \"土\", \"日\"]\r\n        wd = w[dt.astimezone(jst).weekday()]\r\n    @staticmethod\r\n    def to_jst_timeonly(iso_timestamp):\r\n        \"\"\"\r\n        時刻のみ（例: 19:00）で返す\r\n        \"\"\"\r\n        return YTUtilsClient._to_jst_datetime(iso_timestamp).strftime(\"%H:%M\")\r\n        jst = pytz.timezone('Asia/Tokyo')\r\n        return dt.astimezone(jst).strftime(\"%H:%M\")\r\n\r\n    @staticmethod\r\n    def to_jst_custom(iso_timestamp, formatter):\r\n        \"\"\"\r\n        JSTのdatetimeオブジェクトをユーザー定義の関数で任意の文字列に変換\r\n        :param iso_timestamp: ISO形式のタイムスタンプ\r\n        :param formatter: JSTのdatetimeを受け取り任意の文字列を返す関数\r\n        :return: ユーザー定義のフォーマット文字列\r\n        \"\"\"\r\n        return formatter(YTUtilsClient._to_jst_datetime(iso_timestamp))"
        }
    ]
}